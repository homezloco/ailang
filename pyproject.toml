[tool.poetry]
name = "ailang"
version = "0.1.0"
description = "AILang Compiler and Runtime"
authors = ["Your Name <youremail@example.com>"]
readme = "README.md"
license = "MIT"
homepage = "https://github.com/yourusername/ailang"
repository = "https://github.com/yourusername/ailang"
documentation = "https://github.com/yourusername/ailang#readme"
keywords = ["ai", "machine-learning", "dsl", "neural-networks"]
packages = [
    { include = "validators" },
]

[tool.poetry.dependencies]
python = "^3.8"
lark = "^1.1.2"
typing-extensions = "^4.5.0"

[tool.poetry.group.dev.dependencies]
black = "^23.7.0"
isort = "^5.12.0"
mypy = "^1.5.1"
pytest = "^7.4.0"
pytest-cov = "^4.1.0"
flake8 = "^6.1.0"
flake8-bugbear = "^23.7.10"
pre-commit = "^3.3.3"
codecov = "^2.1.13"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 120
target-version = ['py38']
include = '\.pyi?$'

[tool.isort]
profile = "black"
line_length = 120
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
addopts = "-v --cov=validators --cov-report=term-missing"

[tool.coverage.run]
source = ["validators"]
omit = ["**/__init__.py"]

[tool.coverage.report]
show_missing = true
skip_covered = true
fail_under = 90

[tool.ruff]
line-length = 120
target-version = "py38"
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
    "N",  # pep8-naming
    "PL", # pylint
    "RUF",# ruff-specific
]
ignore = [
    "E203",  # whitespace before ':' (conflicts with black)
    "W503",  # line break before binary operator (conflicts with black)
    "PLR2004", # Magic number used in comparisons
]

[project.optional-dependencies]
dev = [
    "black>=23.7.0",
    "isort>=5.12.0",
    "mypy>=1.5.1",
    "pytest>=7.4.0",
    "pytest-cov>=4.1.0",
    "flake8>=6.1.0",
    "flake8-bugbear>=23.7.10",
    "pre-commit>=3.3.3",
    "codecov>=2.1.13",
]
